plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'org.asciidoctor.jvm.convert' version "3.3.2"
}
group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

ext{
	asciidocVersion = "2.0.6.RELEASE"
	snippetsDir = file('build/generated-snippets')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.19'

	implementation 'org.jsoup:jsoup:1.14.2'

	//AWS S3 추가
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	//jwt 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//테스트 rest docs 추가
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}
test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

//asciidoctor {
//	inputs.dir snippetsDir
//	configurations 'asciidoctorExt'
//	dependsOn test
//}

//bootJar {
//	dependsOn asciidoctor
//
//	copy {
//		from asciidoctor.outputDir
//		into "src/main/resources/static/docs"
//	}
//}
jar {
	enabled = false
}